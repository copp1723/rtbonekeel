# AgentFlow Environment Variables

# Database Configuration
# Main application database (PostgreSQL)
DATABASE_URL="postgresql://user:password@host:port/database"
# Example for NeonDB (if used separately or for specific services)
# NEON_DATABASE_URL="postgresql://user:password@project.region.neon.tech/dbname?sslmode=require"

# Application Core Settings
NODE_ENV="development" # Options: "development", "staging", "production", "test"
PORT="3000" # Default port for the main application server
HOST="0.0.0.0" # Host to bind the server to, 0.0.0.0 for all interfaces

# API Keys & Secrets
# It is strongly recommended to use a secret management service for production.
# Replace placeholder values with actual keys, or use references to your secret manager.
OPENAI_API_KEY="your_openai_api_key_here"
SENDGRID_API_KEY="your_sendgrid_api_key_here"
SENTRY_DSN="your_sentry_dsn_here_if_using_sentry"
# Add other third-party service API keys as needed
# EXAMPLE_THIRD_PARTY_API_KEY="your_example_api_key"

# Redis Configuration
# Used for caching, session management, and BullMQ message broker
REDIS_HOST="localhost"
REDIS_PORT="6379"
REDIS_PASSWORD="" # Leave empty if no password, otherwise provide it
REDIS_DB="0" # Default Redis database index
REDIS_TLS="false" # Set to "true" if your Redis server uses TLS
# Optional: For Sentinel setup
# REDIS_SENTINEL_NAME="mymaster"
# REDIS_SENTINEL_HOSTS="sentinel1.example.com:26379,sentinel2.example.com:26379"
# REDIS_SENTINEL_PASSWORD=""

# BullMQ Configuration (Job Queue System)
# Leverages the Redis connection defined above
QUEUE_CONCURRENCY="5" # Number of concurrent jobs the worker will process
FORCE_IN_MEMORY_QUEUE="false" # For development/testing: if "true", uses in-memory queue instead of Redis

# Authentication & Authorization (NextAuth - Frontend)
# Generate a strong secret: `openssl rand -base64 32`
NEXTAUTH_SECRET="a_very_strong_and_long_random_secret_for_nextauth"
NEXTAUTH_URL="http://localhost:3000" # The canonical URL of your frontend application
# Set to true if your app is deployed behind a proxy that terminates SSL
NEXTAUTH_URL_INTERNAL="http://localhost:3000" # For Docker or reverse proxy setups if different from public URL
# NEXTAUTH_TRUST_HOST="true" # If deploying to Vercel or similar platforms

# OAuth Provider Credentials (Examples for NextAuth)
# Only include providers you intend to use.
# GOOGLE_CLIENT_ID="your_google_client_id"
# GOOGLE_CLIENT_SECRET="your_google_client_secret"
# GITHUB_CLIENT_ID="your_github_client_id"
# GITHUB_CLIENT_SECRET="your_github_client_secret"

# Logging Configuration
LOG_LEVEL="info" # Recommended levels: "fatal", "error", "warn", "info", "debug", "trace"
# For file logging (optional):
# LOG_FILE_PATH="logs/app.log" # Path to the log file
# LOG_MAX_SIZE="10M" # Maximum size of a single log file (e.g., 10M, 1G)
# LOG_MAX_FILES="5" # Maximum number of log files to retain (rotation)

# CORS (Cross-Origin Resource Sharing) Configuration
# Comma-separated list of allowed origins, or "*" for all.
# Be restrictive in production, e.g., "https://yourfrontenddomain.com,https://yourotherdomain.com"
CORS_ORIGIN="http://localhost:3000"

# Rate Limiting (Express Middleware)
# Helps protect against brute-force attacks and abuse.
RATE_LIMIT_WINDOW_MS="900000" # 15 minutes (in milliseconds)
RATE_LIMIT_MAX_REQUESTS="100" # Max requests per IP within the window
# For specific sensitive routes, you might want stricter limits configured in code.

# Session Management (Express Middleware, if not solely relying on NextAuth for backend sessions)
# Generate a strong secret
SESSION_SECRET="another_super_strong_random_secret_for_sessions"
SESSION_MAX_AGE="86400000" # 24 hours (in milliseconds)
SESSION_COOKIE_NAME="connect.sid" # Default session cookie name

# File Uploads / Storage (if applicable)
# Example for local storage (not recommended for production)
# UPLOAD_DIR="uploads/"
# MAX_FILE_SIZE_MB="10"
# Example for S3 or similar cloud storage
# AWS_ACCESS_KEY_ID="your_aws_access_key_id"
# AWS_SECRET_ACCESS_KEY="your_aws_secret_access_key"
# AWS_REGION="your_aws_region"
# S3_BUCKET_NAME="your_s3_bucket_name"

# Email Configuration (if not using SendGrid, or for other email needs)
# SMTP_HOST="smtp.example.com"
# SMTP_PORT="587"
# SMTP_USER="your_smtp_user"
# SMTP_PASSWORD="your_smtp_password"
# SMTP_SECURE="true" # Use "true" for TLS, "false" for no encryption (port 587 often uses STARTTLS)
# EMAIL_FROM_ADDRESS="noreply@example.com"

# Monitoring & Tracing (e.g., DataDog, Sentry already covered)
# DD_AGENT_HOST="localhost" # For DataDog APM
# DD_LOGS_INJECTION="true" # For DataDog log injection
# DD_RUNTIME_METRICS_ENABLED="true" # For DataDog runtime metrics

# Notification Configuration
# Enable/disable notification channels
NOTIFICATION_EMAIL_ENABLED="false" # Set to "true" to enable email notifications
NOTIFICATION_SLACK_ENABLED="false" # Set to "true" to enable Slack notifications
NOTIFICATION_SENTRY_ENABLED="true" # Set to "true" to enable Sentry notifications
NOTIFICATION_DATADOG_ENABLED="true" # Set to "true" to enable DataDog notifications

# Notification thresholds (how many events to accumulate before sending a notification)
NOTIFICATION_THRESHOLD_DEBUG="0" # For development, 100 for staging, 1000 for production
NOTIFICATION_THRESHOLD_INFO="0" # For development, 50 for staging, 500 for production
NOTIFICATION_THRESHOLD_WARNING="0" # For development, 10 for staging, 50 for production
NOTIFICATION_THRESHOLD_ERROR="0" # For development, 1 for staging, 1 for production
NOTIFICATION_THRESHOLD_CRITICAL="0" # Always 0 to send immediately for all environments

# Notification recipients
NOTIFICATION_EMAIL_RECIPIENTS="dev-team@example.com" # Comma-separated list of email addresses
NOTIFICATION_SLACK_CHANNELS="#dev-alerts" # Comma-separated list of Slack channels

# Environment Safety Configuration
SAFETY_CHECKS_ENABLED="true" # Set to "false" to disable safety checks (not recommended)
ALLOW_CROSS_ENV_OPERATIONS="false" # Set to "true" to allow cross-environment operations (use with caution)

# Feature Flags
# EXAMPLE_FEATURE_FLAG_NEW_DASHBOARD="true"

# Frontend-specific Environment Variables (prefixed with NEXT_PUBLIC_ for Next.js)
NEXT_PUBLIC_APP_NAME="AgentFlow Platform"
NEXT_PUBLIC_API_BASE_URL="/api" # Relative path if frontend and backend are on the same domain, or full URL
# NEXT_PUBLIC_GOOGLE_ANALYTICS_ID="UA-XXXXX-Y"

# Prisma specific (already covered by DATABASE_URL for client)
# PRISMA_LOG="query,info,warn,error" # For Prisma logging in development

# Drizzle ORM specific (uses DATABASE_URL)
# No specific env vars typically needed beyond DATABASE_URL unless customizing Drizzle Kit

# Miscellaneous
# Any other service-specific or custom environment variables your application needs.
# CUSTOM_SETTING_X="value_for_x"

# Encryption Configuration
# IMPORTANT: Generate a secure random key for production: `openssl rand -base64 32`
# The key must be at least 32 characters long and contain a mix of character types
ENCRYPTION_KEY="generate_a_secure_random_key_at_least_32_chars_long"
ENCRYPTION_KEY_VERSION="1" # Increment when rotating keys
ENCRYPTION_SALT="generate_a_unique_random_salt_for_your_application"
# For key rotation, previous versions can be stored as:
# ENCRYPTION_KEY_V1="your_previous_key_version_1"
# ENCRYPTION_SALT_V1="your_previous_salt_version_1"

# Security Headers (can be configured in code, but some might be toggled via env)
# HSTS_MAX_AGE="31536000" # 1 year in seconds for HTTP Strict Transport Security
# CSP_POLICY="default-src 'self'; script-src 'self' 'unsafe-inline';" # Content Security Policy (complex, define carefully)

# Timezone (if your application needs a specific default timezone)
# TZ="UTC"